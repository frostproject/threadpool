name: Publish Release

on:
  push:
    tags: ["*"]

jobs:
  publish:
    name: Publish Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Update Changelog
        uses: thomaseizinger/keep-a-changelog-new-release@v3
        with:
          tag: ${{ github.ref_name }}

      - name: Bump Pesde Version
        id: version-bump
        uses: DervexDev/file-version-bumper@v1
        with:
          path: ./pesde.toml

      - name: Commit and Push
        uses: EndBug/add-and-commit@v9
        if: ${{ github.ref_name != steps.version-bump.outputs.old_version }}
        with:
          message: "chore: release v${{ github.ref_name }}"
          default_author: github_actions

      - name: Update Tag
        if: ${{ github.ref_name != steps.version-bump.outputs.old_version }}
        run: |
          git tag -fa ${{ github.ref_name }} -m "chore: release v${{ github.ref_name }}"
          git push -f --tags

      - name: Read Changelog
        id: read-changes
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ github.ref_name }}

      - name: Get previous Tag
        id: previous-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Create Release
        id: create-release
        uses: shogo82148/actions-create-release@v1
        with:
          release_name: ${{ github.ref_name }}
          body: |
            ## Changelog
            ${{ steps.read-changes.outputs.changes }}
          prerelease: ${{ contains(github.ref_name, 'pre') }}
          notes_start_tag: ${{ steps.previous-tag.outputs.tag }}
          generate_release_notes: true
          commitish: main
          draft: true

      - name: Install Rokit
        uses: CompeyDev/setup-rokit@v0.1.2
        with:
          cache: true

      - name: Install Dependencies
        run: |
          pesde install --prod

      - name: Build Artifacts
        run: |
          mkdir -p release
          argon build -y package.project.json -o release/library.rbxm

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: library-${{ github.ref_name }}.rbxm
          path: release/library.rbxm

      - name: Upload to Release
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_name: library-${{ github.ref_name }}.rbxm
          asset_path: release/library.rbxm

      - name: Publish on GitHub
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create-release.outputs.id }}

      - name: Authenticate With Pesde
        run: pesde auth login -t "${{ secrets.PESDE_TOKEN }}"

      - name: Publish Roblox Target
        run: pesde publish -y

      - name: Publish Luau Target
        run: |
          sed -i 's/^environment = "roblox"/environment = "luau"/' pesde.toml
          pesde publish -y
